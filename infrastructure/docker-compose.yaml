version: '3.8'


services:
  db:
    image: postgis/postgis:14-3.3-alpine
    platform: linux/amd64
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./infrastructure/.env.db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:?err} -d $${POSTGRES_DB:?err}"]
      start_period: 30s
      timeout: 10s
      interval: 1s
      retries: 10
    # ports:
    #   - "5432:5432"

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data

  bot:
    image: delozhivet/delo_zhivet_bot_and_admin:${DOCKER_TAG}
    command: ["poetry", "run", "runbot"]
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    volumes:
      - persistence_data:/app/persistence_data/

  web:
    image: delozhivet/delo_zhivet_bot_and_admin:${DOCKER_TAG}
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--access-logfile=-", "manage:app"]
    restart: always
    depends_on:
      db:
        condition: service_healthy
      bot:
        condition: service_started
    env_file:
      - ./.env
    volumes:
      - static_value:/app/admin/static/

  nginx:
    image: delozhivet/delo_zhivet_nginx:latest
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/delo.conf:/etc/nginx/servers/delo.conf:rw
      - ./nginx/delo.temp:/etc/nginx/conf.d/delo.temp
      - ./nginx/letsencrypt/:/etc/letsencrypt/:rw
      - static_value:/var/html/static/
    env_file:
      - ./.env
    command: /bin/sh -c "envsubst '$${HOST_NAME} $${WEBHOOK_PATH}' < /etc/nginx/conf.d/delo.temp > /etc/nginx/servers/delo.conf && crond -b && nginx -g 'daemon off;'"


volumes:
  postgres_data:
  persistence_data:
  static_value:
  redis_data:
