"""add_tags

Revision ID: a00a66c5bd9c
Revises: f2dfee9a709b
Create Date: 2023-06-02 16:29:26.726331

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = 'a00a66c5bd9c'
down_revision = 'f2dfee9a709b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag_assistance',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('name', sa.String(length=35), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tag_pollution',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('name', sa.String(length=35), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('assistance_tag_connection',
    sa.Column('Assistance_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['Assistance_id'], ['assistance_disabled.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag_assistance.id'], ondelete='CASCADE')
    )
    op.create_table('pollution_tag_connection',
    sa.Column('pollution_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['pollution_id'], ['pollution.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag_pollution.id'], ondelete='CASCADE')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.drop_table('pollution_tag_connection')
    op.drop_table('assistance_tag_connection')
    op.drop_table('tag_pollution')
    op.drop_table('tag_assistance')
    # ### end Alembic commands ###
