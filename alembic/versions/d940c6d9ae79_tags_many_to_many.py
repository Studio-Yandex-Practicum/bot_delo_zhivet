"""tags_many_to_many

Revision ID: d940c6d9ae79
Revises: b5707fc337c1
Create Date: 2023-05-29 18:54:11.193535

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = 'd940c6d9ae79'
down_revision = 'b5707fc337c1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assistance_tag_connection',
    sa.Column('Assistance_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['Assistance_id'], ['assistance_disabled.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag_assistance.id'], ondelete='CASCADE')
    )
    op.create_table('pollution_tag_connection',
    sa.Column('pollution_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['pollution_id'], ['pollution.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag_pollution.id'], ondelete='CASCADE')
    )
    with op.batch_alter_table('assistance_disabled', schema=None) as batch_op:
        batch_op.drop_constraint('assistance_disabled_tag_id_fkey', type_='foreignkey')
        batch_op.drop_column('tag_id')

    with op.batch_alter_table('pollution', schema=None) as batch_op:
        batch_op.drop_constraint('pollution_tag_id_fkey', type_='foreignkey')
        batch_op.drop_column('tag_id')

    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('pollution', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', postgresql.UUID(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('pollution_tag_id_fkey', 'tag_pollution', ['tag_id'], ['id'], ondelete='SET NULL')
        
    with op.batch_alter_table('assistance_disabled', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tag_id', postgresql.UUID(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('assistance_disabled_tag_id_fkey', 'tag_assistance', ['tag_id'], ['id'], ondelete='SET NULL')
        
    op.drop_table('pollution_tag_connection')
    op.drop_table('assistance_tag_connection')
    # ### end Alembic commands ###
